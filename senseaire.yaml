#  esphome config/senseair.yaml run 
esphome:
  name: senseair
  platform: ESP32
  board: esp32dev

wifi:
  ssid: !secret ssid
  password: !secret wifi_password

#  manual_ip:
#    static_ip: !secret static_ip
#    gateway: !secret gateway
#    subnet: !secret subnet

# Enable fallback hotspot (captive portal) in case WiFi connection fails
ap:
  ssid: "Senseair Fallback Hotspot"
  password: "ZeapLnk801Rf"

captive_portal:

# Enable logging
logger:
  baud_rate: 0  # You're using the same serial port for logging and the UART component.

# Enable Home Assistant API
#api:

mqtt:
  broker: !secret mqtt_server
  username: !secret mqtt_username
  password: !secret mqtt_password
  reboot_timeout: 0s
  id: mqtt_client
  
ota:

i2c:
  sda: 21
  scl: 22
  scan: True
  id: bus_a

uart:
  rx_pin: 3
  tx_pin: 1
  baud_rate: 9600
  rx_buffer_size: 1024

web_server:
  # /sensor/temperature
  # /sensor/humidity
  # /sensor/senseair_co2_value
  
time:
- platform: sntp
  id: ntp_time
  servers: !secret ntp_server
  
  on_time:
       # Every 5 seconds
       - seconds: /5
         then:
           lambda: |-
               id(mqtt_client).publish_json("senseair/co2", [=](JsonObject &root) {
                 root["co2"] = id(senseairco2).state;
                 root["ts"]  = id(ntp_time).utcnow().timestamp;});

       # Every 5 seconds
       - seconds: /5
         then:
           lambda: |-
               id(mqtt_client).publish_json("senseair/sensors", [=](JsonObject &root) {
                 root["co2"] = id(senseairco2).state;
                 root["t"]   = id(ath20temp).state;
                 root["h"]   = id(ath20humidity).state;
                 root["ts"]  = id(ntp_time).utcnow().timestamp;});

sensor:
  - platform: aht10
    id: ath20
    temperature:
      id: ath20temp
      name: "Temperature"
      filters:
        - lambda: return x * (9.0/5.0) + 32.0;
      unit_of_measurement: "°F"
    humidity:
      id: ath20humidity
      name: "Humidity"
    update_interval: 5s

  - platform: senseair
    co2:
      id: senseairco2
      name: "SenseAir CO2 Value"
    update_interval: 5s

display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    #reset_pin: D0
    address: 0x3C
    update_interval: 1s
    lambda: |-
      it.strftime(0, 0, id(font1), TextAlign::TOP_LEFT,   "%I:%M:%S %p  %b %d", id(ntp_time).now());
      it.printf(0, 14,  id(font1), TextAlign::TOP_LEFT,   "   %.2f° F", id(ath20temp).state);
      it.printf(70, 14, id(font1), TextAlign::TOP_LEFT,   "   %.1f%%", id(ath20humidity).state);
      it.printf(64, 24, id(font2), TextAlign::TOP_CENTER, "%.0f", id(senseairco2).state);

font:
  - file: 'arial.ttf'
    id: font1
    size: 13
  - file: 'arialbd.ttf'
    id: font2
    size: 42
  - file: 'ariblk.ttf'
    id: font3
    size: 32
